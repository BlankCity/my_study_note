NPU固件编译时有两个概念，一个是platform，另一是target。
Platform是指固件运行的平台，分为：性能模型performace model（简称PModel或者PM），功能模型function model（简称FModel或者FM）和RTL。VDK使用fm作为npu的模型，所以编译vdk上运行的固件是选择fm平台。
1. Platform（平台）
平台指的是固件运行的仿真或实际硬件环境，主要分为以下几种：
性能模型（Performance Model，简称PModel或PM）：
用途：用于评估和优化NPU在不同负载下的性能表现。
特点：模拟NPU的计算能力、带宽、延迟等性能指标，帮助开发者进行性能调优和瓶颈分析。
功能模型（Function Model，简称FModel或FM）：
用途：用于功能验证，确保NPU的各项功能模块按预期工作。
特点：模拟NPU的功能行为，支持软件开发和调试。正如您所提到的，VDK（Virtual Development Kit）使用FModel作为NPU的模型，因此在编译运行于VDK上的固件时，需要选择FM平台。
RTL（Register-Transfer Level）：
用途：用于硬件实现层面的验证和验证，包括综合和时序分析。
特点：基于硬件描述语言（如Verilog或VHDL），描述NPU的实际电路设计，用于最终的硬件实现和验证。
1. VDK（Virtual Development Kit）
VDK 即虚拟开发套件（Virtual Development Kit），是一个用于开发、测试和调试NPU固件的软件工具集。它为开发人员提供了一个仿真环境，使他们能够在实际硬件尚未可用或不便使用的情况下进行固件开发和验证。具体来说：
功能：
仿真与模拟：VDK 提供了NPU的功能模型（FM），允许开发人员在虚拟环境中运行和测试固件。
调试支持：集成了调试工具，可以进行断点调试、性能分析和错误排查。
代码验证：确保固件在功能模型上的行为与预期一致，从而减少实际硬件上的潜在问题。
2. FM（Function Model）
FM 即 功能模型（Function Model），是NPU的一个仿真模型，用于模拟NPU在功能层面的行为。它主要用于验证和调试固件的功能正确性。具体特点包括：
功能模拟：
指令集模拟：准确模拟NPU的指令集和操作逻辑，确保固件在虚拟环境中能够正确执行。
模块行为：仿真NPU各个功能模块的交互和数据流动，帮助开发人员理解和验证固件的工作机制。
与VDK的关系：
集成环境：FM 通常集成在 VDK 中，作为VDK提供的仿真平台，供开发人员编译、运行和测试固件。
选择平台：在编译运行于VDK上的固件时，需要选择 FM 作为平台，以确保固件能够在功能模型上正确执行。
用途：
功能验证：确保固件实现了预期的功能，且在指令执行、数据处理等方面没有错误。
性能评估（部分）：虽然FM主要侧重功能，但也可以在一定程度上辅助分析固件的执行效率和资源使用情况。
Target是指要编译的目标固件。目标固件是指，编译npu固件时除了最终的NPU运行时固件之外，NPU runtime源代码中还集成了很多case，这些case都可以被编译成单独的固件供测试和验证使用。
